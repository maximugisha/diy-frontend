name: Build and Push Docker Image

on:
  push:
    branches:
      #- dev
      - main  # Trigger workflow on push to the 'main' branch
#   pull_request:
#     branches:
#       - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Make .env
        run: |
          sudo echo "${{ secrets.ENV_FILE }}" > .env

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

        # Step 3: Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-buildx-${{ github.sha }}
            restore-keys: |
                ${{ runner.os }}-buildx-

      # Step 3: Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and tag the Docker image
      - name: Build and tag Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/diy-frontend:latest .

      # Step 5: Push the image to DockerHub
      - name: Push Docker image to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/diy-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: SSH On Instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_IP_ADDRESS }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd diy-frontend
            sudo docker rm -f diy-frontend
            sudo docker pull maximugisha/diy-frontend:latest
            sudo docker run -d -p 3000:3000 -v node_modules:/app/node_modules --name diy-frontend maximugisha/diy-frontend:latest
          

             
              